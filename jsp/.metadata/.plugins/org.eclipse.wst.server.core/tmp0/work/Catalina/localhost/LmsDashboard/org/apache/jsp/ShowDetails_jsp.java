/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.42
 * Generated at: 2023-09-27 17:53:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.java.lms.Employee;
import com.java.lms.LeaveDAOImpl;
import com.java.lms.LeaveDetailsDAO;
import com.java.lms.EmployeeDAOImpl;
import com.java.lms.EmployeeDAO;
import java.util.List;
import com.java.lms.LeaveDetails;

public final class ShowDetails_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.java.lms.EmployeeDAOImpl");
    _jspx_imports_classes.add("com.java.lms.LeaveDetailsDAO");
    _jspx_imports_classes.add("com.java.lms.Employee");
    _jspx_imports_classes.add("com.java.lms.LeaveDetails");
    _jspx_imports_classes.add("com.java.lms.LeaveDAOImpl");
    _jspx_imports_classes.add("com.java.lms.EmployeeDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write(".button {\r\n");
      out.write("\tpadding: 10px 20px;\r\n");
      out.write("\tbackground-color: #007bff; /* Button background color */\r\n");
      out.write("\tcolor: #fff; /* Text color */\r\n");
      out.write("\ttext-decoration: none; /* Remove underlines from the link */\r\n");
      out.write("\tborder: 1px solid #007bff; /* Add a border */\r\n");
      out.write("\tborder-radius: 5px; /* Rounded corners */\r\n");
      out.write("\tcursor: pointer; /* Show a pointer cursor on hover */\r\n");
      out.write("\ttransition: background-color 0.5s ease;\r\n");
      out.write("\t/* Smooth background color transition */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/* Apply the animation to the button */\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

	int empId1 = Integer.parseInt(request.getParameter("empId"));
	EmployeeDAO dao = new EmployeeDAOImpl();
	Employee employ = dao.searchEmployeeDao(empId1);
	int mgrId = employ.getManagerId();

	LeaveDetailsDAO dao1 = new LeaveDAOImpl();
	List<LeaveDetails> leaveList = dao1.showLeaveDao(empId1);
	//List<LeaveDetails> empList=dao1.showLeaveMgrIdDao(empId1);
	
	LeaveDetailsDAO dao2 = new LeaveDAOImpl();
	List<LeaveDetails> searchleavelist = dao2.showPendingLeaveDao(empId1);
	
	
	
      out.write("\r\n");
      out.write("\t<table border=\"3\" align=\"center\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>Employ Id:");
      out.print(employ.getEmpId());
      out.write("<br /> Employ Name:");
      out.print(employ.getEmpName());
      out.write("<br />\r\n");
      out.write("\t\t\t\tEmploy Email:");
      out.print(employ.getEmpEmail());
      out.write("<br />\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t");

				if (mgrId != 0) {
					Employee emp = dao.searchEmployeeDao(mgrId);
				
      out.write(" Mgr Id:");
      out.print(emp.getEmpId());
      out.write("<br /> Mgr Name:");
      out.print(emp.getEmpName());
      out.write("<br />\r\n");
      out.write("\t\t\t\tMgr Email:");
      out.print(emp.getEmpEmail());
      out.write("<br />\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t");

			} else {
			out.println("Manager NotFound");
			}
			
      out.write("\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<br>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</br>\r\n");
      out.write("\t<h2 class=\"table-title\" align=\"center\">Leave Details</h2>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<table border=\"3\" margin=10px padding=5px align=\"center\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>LeaveId</th>\r\n");
      out.write("\t\t\t<th>EmpId</th>\r\n");
      out.write("\t\t\t<th>Leave StartDate</th>\r\n");
      out.write("\t\t\t<th>Leave EndDate</th>\r\n");
      out.write("\t\t\t<th>noOfDays</th>\r\n");
      out.write("\t\t\t<th>Leave Type</th>\r\n");
      out.write("\t\t\t<th>Leave Status</th>\r\n");
      out.write("\t\t\t<th>Leave Reason</th>\r\n");
      out.write("\t\t\t<th>Manager Comments</th>\r\n");
      out.write("\t\t\t<th>Applied ON</th>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t");

		for (LeaveDetails leave : leaveList) {
		
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>");
      out.print(leave.getLeaveId());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(leave.getEmpId());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(leave.getLeaveStartDate());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(leave.getLeaveEndDate());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(leave.getNoOfDays());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(leave.getLeaveType());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(leave.getLeaveStatus());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(leave.getLeaveReason());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(leave.getManagerComments());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(leave.getAppliedOn());
      out.write("</td>\r\n");
      out.write("\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");

		}
		
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("\r\n");
      out.write("\t<center>\r\n");
      out.write("\r\n");
      out.write("\t\t<br></br> <a href=ApplyLeave.jsp?empId= ");
      out.print(employ.getEmpId());
      out.write("\r\n");
      out.write("\t\t\tclass=\"button\">Apply Leave</a>\r\n");
      out.write("\r\n");
      out.write("\t</center>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<br>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</br>\r\n");
      out.write("\t<h2 class=\"table-title\" align=\"center\">Leave Details MgrId</h2>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<table border=\"3\" margin=10px padding=5px align=\"center\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>LeaveId</th>\r\n");
      out.write("\t\t\t<th>EmpId</th>\r\n");
      out.write("\t\t\t<th>Leave StartDate</th>\r\n");
      out.write("\t\t\t<th>Leave EndDate</th>\r\n");
      out.write("\t\t\t<th>noOfDays</th>\r\n");
      out.write("\t\t\t<th>Leave Type</th>\r\n");
      out.write("\t\t\t<th>Leave Status</th>\r\n");
      out.write("\t\t\t<th>Leave Reason</th>\r\n");
      out.write("\t\t\t<th>Manager Comments</th>\r\n");
      out.write("\t\t\t<th>Applied ON</th>\r\n");
      out.write("\t\t\t<th>Approve/Deny</th>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t");

		if (searchleavelist.isEmpty()) {
	
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan=\"12\"><h2>No leave found</h2></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");

		} else {
			for(LeaveDetails emp : searchleavelist) {
	
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>");
      out.print(emp.getLeaveId());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(emp.getEmpId());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(emp.getLeaveStartDate());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(emp.getLeaveEndDate());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(emp.getNoOfDays());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(emp.getLeaveType());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(emp.getLeaveStatus());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(emp.getLeaveReason());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(emp.getManagerComments());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(emp.getAppliedOn());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t<a href=\"ApproveDeny.jsp?leaveId=");
      out.print(emp.getLeaveId() );
      out.write(" \"class=\"button1\">Approve/Deny</a>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\t");

			}
			
      out.write("\r\n");
      out.write("\t\t");

		}
		
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
